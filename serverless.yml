service: mb-incoming-sync
# app and org for use with dashboard.serverless.com
app: mbplus
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

custom:
  bucket: mb-incoming-sync-files
  sync-filename: mb-incoming-sync

provider:
  name: aws
  runtime: nodejs12.x

# you can overwrite defaults here
  stage: dev
  region: eu-central-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  mb-incoming-sync:
    handler: handler.main
    events:
      - http:
          path: mb-incoming-sync/{admin}
          method: get
          request:
            parameters:
              paths:
                admin: true            
      - http:
          path: mb-incoming-sync/{admin}
          method: post
          request:
            parameters:
              paths:
                admin: true            
    environment:
      BUCKET: ${self:custom.bucket}
      SYNC_FILENAME: ${self:custom.sync-filename}